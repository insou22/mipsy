match stepped_runtime {
                            Ok(Ok(next_runtime)) => runtime = next_runtime,
                            Ok(Err(guard)) => {
                                use RuntimeSyscallGuard::*;
                                match guard {
                                    PrintInt(print_int_args, next_runtime) => {
                                        ConsoleService::warn(&format!(
                                            "printing integer {}",
                                            print_int_args.value
                                        ));

                                        runtime = next_runtime;
                                    }

                                    PrintFloat(print_float_args, next_runtime) => {
                                        ConsoleService::warn(&format!(
                                            "printing float {}",
                                            print_float_args.value
                                        ));

                                        runtime = next_runtime;
                                    }

                                    PrintDouble(print_double_args, next_runtime) => {
                                        ConsoleService::warn(&format!(
                                            "printing double {}",
                                            print_double_args.value
                                        ));

                                        runtime = next_runtime;
                                    }

                                    PrintString(print_string_args, next_runtime) => {
                                        ConsoleService::warn(&format!(
                                            "printing string {:?}",
                                            print_string_args.value
                                        ));

                                        runtime = next_runtime;
                                    }

                                    PrintChar(print_char_args, next_runtime) => {
                                        ConsoleService::warn(&format!(
                                            "printing char {:?}",
                                            print_char_args.value
                                        ));

                                        runtime = next_runtime;
                                    }

                                    ReadInt(_fn_ptr) => {
                                        ConsoleService::warn(&format!("reading int"));
                                        todo!();
                                    }

                                    ReadFloat(_fn_ptr) => {
                                        ConsoleService::warn(&format!("reading float"));
                                        todo!();
                                    }

                                    ReadString(_str_args, _fn_ptr) => {
                                        ConsoleService::warn(&format!("reading string"));
                                        todo!();
                                    }

                                    ReadChar(_fn_ptr) => {
                                        ConsoleService::warn(&format!("Reading char"));
                                        todo!();
                                    }

                                    Sbrk(_sbrk_args, _fn_ptr) => {
                                        ConsoleService::warn(&format!("sbrk"));
                                        todo!();
                                    }

                                    Exit(_fn_ptr) => {
                                        ConsoleService::warn(&format!("exit syscall"));
                                        todo!();
                                    }

                                    Open(_open_args, _fn_ptr) => {
                                        ConsoleService::warn(&format!("open"));
                                        todo!();
                                    }

                                    Write(_write_args, _fn_ptr) => {
                                        ConsoleService::warn(&format!("write"));
                                        todo!();
                                    }

                                    Close(_close_args, _fn_ptr) => {
                                        ConsoleService::warn(&format!("Close"))
                                    }

                                    ExitStatus(_exit_status_args, next_runtime) => {
                                        ConsoleService::warn(&format!("Exit"))
                                    }

                                    Breakpoint(_runtime) => {
                                        ConsoleService::warn(&format!("breakpoint"))
                                    }

                                    UnknownSyscall(_unknown_syscall_args, _runtime) => {
                                        ConsoleService::warn(&format!("Unknown"))
                                    }

                                    _ => todo!(), /*

                                                  Sbrk       (SbrkArgs, Runtime),
                                                  Exit       (Runtime),
                                                  PrintChar  (PrintCharArgs, Runtime),
                                                  ReadChar   (           Box<dyn FnOnce(u8)             -> Runtime>),
                                                  Open       (OpenArgs,  Box<dyn FnOnce(i32)            -> Runtime>),
                                                  Read       (ReadArgs,  Box<dyn FnOnce((i32, Vec<u8>)) -> Runtime>),
                                                  Write      (WriteArgs, Box<dyn FnOnce(i32)            -> Runtime>),
                                                  Close      (CloseArgs, Box<dyn FnOnce(i32)            -> Runtime>),
                                                  ExitStatus (ExitStatusArgs, Runtime),

                                                  // other
                                                  Breakpoint     (Runtime),
                                                  UnknownSyscall (UnknownSyscallArgs, Runtime)
                                                  */
                                }
                            }
                            Err((prev_runtime, err)) => {
                                runtime = prev_runtime;
                                todo!("Send error to frontend iguess");
                            }
                        }
